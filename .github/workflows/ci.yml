name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  RUST_BACKTRACE: 1

jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v3
      - name: Stable toolchain with rustfmt and clippy
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2

      - name: Check coding style
        run: cargo fmt --check --all

      - name: Lint
        run: cargo clippy --all-targets  --all-features -- -D warnings

  tests:
    name: Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v3
      - name: Stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
      - uses: taiki-e/install-action@nextest

      - name: Test
        run: cargo nextest run --all-features --lib --bins --test keys

  ctf-challenges:
    name: CTF challenges
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v3
      - name: Stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
      - uses: taiki-e/install-action@nextest

      - name: Test
        run: cargo nextest run --release --all-features --test "*ctf*"

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v3
      - name: Stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - uses: Swatinem/rust-cache@v2
      - uses: taiki-e/install-action@nextest

      - name: Tests
        run: cargo nextest run --all-features --lib --bins --test keys
        env:
          CARGO_INCREMENTAL: "0"
          RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests"
          RUSTDOCFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests"

      - name: Grcov
        id: coverage
        uses: actions-rs/grcov@v0.1
        with:
          config: grcov.yml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ${{ steps.coverage.outputs.report }}
          flags: rust
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  build:
    name: Build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - uses: Swatinem/rust-cache@v2

      # msys2 required by rug on windows
      - name: Setup msys2 (windows)
        uses: msys2/setup-msys2@v2
        if: matrix.os == 'windows-latest'
        with:
          install: >-
            base-devel
            pacman-mirrors
            diffutils
            m4
            make
            openssl
            openssl-devel
          pacboy: >-
            gcc:p
            rust:p

      # Only for windows
      - name: Msys2 build (windows)
        if: matrix.os == 'windows-latest'
        shell: msys2 {0}
        run: |
          cargo build

      - name: Build
        if: matrix.os != 'windows-latest'
        run: cargo build
