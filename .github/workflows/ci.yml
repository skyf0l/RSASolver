name: CI

on:
  push:
    branches: [master]
    paths-ignore:
    - ".github/**"
    - "!.github/workflows/ci.yml"
    - ".gitignore"
    - "codecov.yml"
    - "grcov.yml"
    - "LICENSE*"
    - "README.md"
  pull_request:
    branches: [master]
    paths-ignore:
    - ".github/**"
    - "!.github/workflows/ci.yml"
    - ".gitignore"
    - "codecov.yml"
    - "grcov.yml"
    - "LICENSE*"
    - "README.md"

env:
  RUST_BACKTRACE: 1

jobs:
  fmt:
    name: Format
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3
    - name: Stable toolchain with rustfmt
      uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: rustfmt
    - uses: swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2

    - name: Check coding style
      run: cargo fmt --check --all

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3
    - name: Stable toolchain with clippy
      uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: clippy
    - uses: swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2

    - name: Lint
      run: cargo clippy --all-targets  --all-features -- -D warnings

  docs:
    name: Docs
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      RUSTDOCFLAGS: "-Dwarnings"

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3
    - name: Stable toolchain
      uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    - uses: swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2

    - run: cargo doc --no-deps

  tests:
    name: Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3
    - name: Stable toolchain
      uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    - uses: swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2
    - uses: taiki-e/install-action@c2c0b6efca88e97964ac243a1bce7fa796e0f56f # v2.41.4

    - name: Test
      run: cargo nextest run --all-features --lib --bins --test keys

  ctf-challenges:
    name: CTF challenges
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3
    - name: Stable toolchain
      uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    - uses: swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2
    - uses: taiki-e/install-action@c2c0b6efca88e97964ac243a1bce7fa796e0f56f # v2.41.4

    - name: Test
      run: cargo nextest run --release --all-features --test "*ctf*" --test crypton

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3
    - name: Stable toolchain
      uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1
      with:
        profile: minimal
        toolchain: nightly
        override: true
    - uses: swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2
    - uses: taiki-e/install-action@c2c0b6efca88e97964ac243a1bce7fa796e0f56f # v2.41.4

    - name: Tests
      run: cargo nextest run --all-features --lib --bins --test keys
      env:
        CARGO_INCREMENTAL: "0"
        RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests"
        RUSTDOCFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests"

    - name: Grcov
      id: coverage
      uses: actions-rs/grcov@770fa904bcbfc50da498080d1511da7388e6ddc6 # v0.1
      with:
        config: grcov.yml

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@ab904c41d6ece82784817410c45d8b8c02684457 # v3
      with:
        files: ${{ steps.coverage.outputs.report }}
        flags: rust
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  build:
    name: Build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3
    - uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    - uses: swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2

    # msys2 required by rug on windows
    - name: Setup msys2 (windows)
      uses: msys2/setup-msys2@d0e80f58dffbc64f6a3a1f43527d469b4fc7b6c8 # v2
      if: matrix.os == 'windows-latest'
      with:
        install: >-
          base-devel pacman-mirrors diffutils m4 make openssl openssl-devel
        pacboy: >-
          gcc:p rust:p #magic___^_^___line
    # Only for windows
    - name: Msys2 build (windows)
      if: matrix.os == 'windows-latest'
      shell: msys2 {0}
      run: |
        cargo build

    - name: Build
      if: matrix.os != 'windows-latest'
      run: cargo build

  docker-build:
    name: Docker build
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # v2

    - uses: jpribyl/action-docker-layer-caching@c632825d12ec837065f49726ea27ddd40bcc7894 # v0.1.1
      continue-on-error: true

    - name: Build the Docker image
      run: DOCKER_BUILDKIT=1 docker build . --file Dockerfile -t rsacracker

    - name: Test the Docker image
      run: docker run --rm -v $PWD:/data rsacracker -n 323 --attack small_prime --factors
