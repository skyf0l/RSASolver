name: CI

on:
  push:
    branches: [master]
    paths-ignore:
    - ".github/**"
    - "!.github/workflows/ci.yml"
    - ".gitignore"
    - "codecov.yml"
    - "grcov.yml"
    - "LICENSE*"
    - "README.md"
  pull_request:
    branches: [master]
    paths-ignore:
    - ".github/**"
    - "!.github/workflows/ci.yml"
    - ".gitignore"
    - "codecov.yml"
    - "grcov.yml"
    - "LICENSE*"
    - "README.md"

env:
  RUST_BACKTRACE: 1

jobs:
  fmt:
    name: Format
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    - name: Stable toolchain with rustfmt
      uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1.0.7
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: rustfmt
    - uses: swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2.7.3

    - name: Check coding style
      run: cargo fmt --check --all

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    - name: Stable toolchain with clippy
      uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1.0.7
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: clippy
    - uses: swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2.7.3

    - name: Lint
      run: cargo clippy --all-targets  --all-features -- -D warnings

  docs:
    name: Docs
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      RUSTDOCFLAGS: "-Dwarnings"

    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    - name: Stable toolchain
      uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1.0.7
      with:
        profile: minimal
        toolchain: stable
        override: true
    - uses: swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2.7.3

    - run: cargo doc --no-deps

  tests:
    name: Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    - name: Stable toolchain
      uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1.0.7
      with:
        profile: minimal
        toolchain: stable
        override: true
    - uses: swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2.7.3
    - uses: taiki-e/install-action@ef7090108a583d4124f188b4958359153b2d19e1 # nextest

    - name: Test
      run: cargo nextest run --all-features --lib --bins --test keys

  ctf-challenges:
    name: CTF challenges
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    - name: Stable toolchain
      uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1.0.7
      with:
        profile: minimal
        toolchain: stable
        override: true
    - uses: swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2.7.3
    - uses: taiki-e/install-action@ef7090108a583d4124f188b4958359153b2d19e1 # nextest

    - name: Test
      run: cargo nextest run --release --all-features --test "*ctf*" --test crypton

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    - name: Stable toolchain
      uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1.0.7
      with:
        profile: minimal
        toolchain: nightly
        override: true
    - uses: swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2.7.3
    - uses: taiki-e/install-action@ef7090108a583d4124f188b4958359153b2d19e1 # nextest

    - name: Tests
      run: cargo nextest run --all-features --lib --bins --test keys
      env:
        CARGO_INCREMENTAL: "0"
        RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests"
        RUSTDOCFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests"

    - name: Grcov
      id: coverage
      uses: actions-rs/grcov@770fa904bcbfc50da498080d1511da7388e6ddc6 # v0.1.6
      with:
        config: grcov.yml

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@e28ff129e5465c2c0dcc6f003fc735cb6ae0c673 # v4.5.0
      with:
        files: ${{ steps.coverage.outputs.report }}
        flags: rust
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  build:
    name: Build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    - uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1.0.7
      with:
        profile: minimal
        toolchain: stable
        override: true
    - uses: swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2.7.3

    # msys2 required by rug on windows
    - name: Setup msys2 (windows)
      uses: msys2/setup-msys2@d0e80f58dffbc64f6a3a1f43527d469b4fc7b6c8 # v2.23.0
      if: matrix.os == 'windows-latest'
      with:
        install: base-devel pacman-mirrors diffutils m4 make openssl openssl-devel
        pacboy: gcc:p rust:p

    # Only for windows
    - name: Msys2 build (windows)
      if: matrix.os == 'windows-latest'
      shell: msys2 {0}
      run: |
        cargo build

    - name: Build
      if: matrix.os != 'windows-latest'
      run: cargo build

  docker-build:
    name: Docker build
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

    - uses: jpribyl/action-docker-layer-caching@c632825d12ec837065f49726ea27ddd40bcc7894 # v0.1.1
      continue-on-error: true

    - name: Build the Docker image
      run: DOCKER_BUILDKIT=1 docker build . --file Dockerfile -t rsacracker

    - name: Test the Docker image
      run: docker run --rm -v $PWD:/data rsacracker -n 323 --attack small_prime --factors

  publish-crates_io:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    timeout-minutes: 30

    needs: [fmt, clippy, docs, tests, ctf-challenges, coverage, build, docker-build]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')

    steps:
    - name: Checkout sources
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

    - name: Install stable toolchain
      uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1.0.7
      with:
        profile: minimal
        toolchain: stable
        override: true

    - run: cargo publish --token ${CRATES_TOKEN}
      env:
        CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}

  publish-docker_hub:
    name: Publish to hub.docker.com
    runs-on: ubuntu-latest
    timeout-minutes: 30

    needs: [fmt, clippy, docs, tests, ctf-challenges, coverage, build, docker-build]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')

    env:
      IMAGE_NAME: skyf0l/rsacracker

    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

    - name: Install yq
      run: |
        sudo wget https://github.com/mikefarah/yq/releases/download/${VERSION}/${BINARY} -O /usr/bin/yq
        sudo chmod +x /usr/bin/yq
      env:
        VERSION: v4.40.5
        BINARY: yq_linux_amd64

    - name: Get package version
      id: get_version
      run: echo VERSION=$(yq ".package.version" Cargo.toml) >> $GITHUB_OUTPUT

    - name: Login to Docker Hub
      uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3.2.0
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@1a162644f9a7e87d8f4b053101d1d9a712edc18c # v6.3.0
      with:
        push: true
        tags: ${{ env.IMAGE_NAME }}:${{ steps.get_version.outputs.VERSION }},${{ env.IMAGE_NAME }}:latest
