use std::{str::FromStr, sync::Arc};

use rsacracker::{integer_to_string, run_attacks, run_specific_attacks, Parameters, WienerAttack};
use rug::Integer;

#[test]
fn picoctf_2017_weirderrsa() {
    // From picoCTF 2017 / weirderRSA
    // https://ctftime.org/task/3910

    let params = Parameters {
            n: Some(Integer::from_str("499607129142614016115845569972309954865466642986629586633467546172800056547903083303297314393486719922392114168964815069281475244480336720618108262665997707387594045170650286331094075335771255196970298123339129317833157961011527832876727076344754954725939644758068479530394261225267979368085014589570504346427").unwrap()),
            dp: Some(Integer::from_str("10223330953817363123811922583649696214606550602104286204220891355717604605964870127334598738896285490397615099445491494493968669242516576783690807635432479").unwrap()),
            c: Some(Integer::from_str("153408111238083132625075217386160278201089187923862024676103784080001237826514301713735771160917544373591779610748265147756784683926730761236534493663419614238905006609729514145435055984994364128927411759418067871721495104602569203564450508769250852903921152143258615277062069536567367247248160384585690407058").unwrap()),
            ..Default::default()
        };

    let solution = run_attacks(&params).unwrap();
    assert!(solution.pk.is_some());
    assert_eq!(
        integer_to_string(&solution.m.unwrap()).unwrap(),
        "flag{wow_leaking_dp_breaks_rsa?_47689841281}"
    );
}

#[test]
fn picoctf_2017_smallrsa() {
    // From picoCTF 2017 / SmallRSA
    // https://ctftime.org/task/3985

    let params = Parameters {
            e: Integer::from_str("165528674684553774754161107952508373110624366523537426971950721796143115780129435315899759675151336726943047090419484833345443949104434072639959175019000332954933802344468968633829926100061874628202284567388558408274913523076548466524630414081156553457145524778651651092522168245814433643807177041677885126141").unwrap(),
            n: Some(Integer::from_str("380654536359671023755976891498668045392440824270475526144618987828344270045182740160077144588766610702530210398859909208327353118643014342338185873507801667054475298636689473117890228196755174002229463306397132008619636921625801645435089242900101841738546712222819150058222758938346094596787521134065656721069").unwrap()),
            c: Some(Integer::from_str("84740524770381403153622925447792920959815469600692319965596776738431504244164788253920072346154965475345520986566261139605189850053220984036986688956922312943484012082747435674795128749623149324459566588589685250817942108728364336944750553593289462772627326115549452684668188298340307743571301091011089977112").unwrap()),
            ..Default::default()
        };

    let solution = run_specific_attacks(&params, &[Arc::new(WienerAttack)]).unwrap();
    assert!(solution.pk.is_some());
    assert_eq!(
        integer_to_string(&solution.m.unwrap()).unwrap(),
        "flag{Are_any_RSA_vals_good_15878570577}"
    );
}
